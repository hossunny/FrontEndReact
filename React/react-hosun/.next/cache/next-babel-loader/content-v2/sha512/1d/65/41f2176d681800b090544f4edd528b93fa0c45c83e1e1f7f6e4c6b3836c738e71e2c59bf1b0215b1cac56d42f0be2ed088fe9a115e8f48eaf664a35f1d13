{"ast":null,"code":"import _defineProperty from \"C:/Users/Bae Kyungmo/OneDrive/Desktop/FrontEndStudy/React/react-hosun/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bae Kyungmo\\\\OneDrive\\\\Desktop\\\\FrontEndStudy\\\\React\\\\react-hosun\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport './_app.css';\nimport { StylesProvider } from '@material-ui/styles';\nimport { ThemeProvider } from '@material-ui/core';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport Head from 'next/head'; // import withApollo from 'next-with-apollo'\n// import AdminLayout from '~/src/components/layouts/AdminLayout'\n// import Router from 'next/router'\n// import { ApolloLink, HttpLink, ApolloProvider } from '@apollo/client'\n// import { ApolloClient } from '@apollo/client/core'\n// import { InMemoryCache } from '@apollo/client/cache'\n\nimport { CookiesProvider } from 'react-cookie';\nimport Cookie from 'cookie';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport theme from '../src/theme';\n\nconst noop = () => {};\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  router: {\n    pathname\n  },\n  apollo\n}) => {\n  if (process.env.NEXT_PUBLIC_ENV !== 'dev') {\n    console.log = noop;\n    console.warn = noop;\n  }\n\n  const Header = /*#__PURE__*/_jsxDEV(Head, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Codered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n\n  let App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Header, /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  const options = {\n    // you can also just use 'bottom center'\n    position: positions.BOTTOM_CENTER,\n    timeout: 5000,\n    // offset: '30px',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n  };\n  return /*#__PURE__*/_jsxDEV(AlertProvider, _objectSpread(_objectSpread({}, options), {}, {\n    template: AlertTemplate,\n    children: /*#__PURE__*/_jsxDEV(CookiesProvider, {\n      children: /*#__PURE__*/_jsxDEV(StylesProvider, {\n        injectFirst: true,\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: theme,\n          children: /*#__PURE__*/_jsxDEV(StyledThemeProvider, {\n            theme: theme,\n            children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyApp;\nexport default MyApp; // const isWhiteListUrl = (url) => {\n//   return true\n//   // return (\n//   //   url === '/' ||\n//   //   // url === '/card' ||\n//   //   url.startsWith('/_error') ||\n//   //   url.startsWith('/member/login') ||\n//   //   url.startsWith('/member/join') ||\n//   //   url.startsWith('/member/join-result') ||\n//   //   url.startsWith('/member/not-verified') ||\n//   //   url.startsWith('/member/verify') ||\n//   //   url.startsWith('/member/reset-password')\n//   // )\n// }\n// MyApp.getInitialProps = async ({ ctx }) => {\n//   let serverSideCookie\n//   const { req, res, pathname } = ctx\n//   if (req) {\n//     serverSideCookie = req.headers.cookie\n//   }\n//   const isSsr = typeof window === 'undefined'\n//   const parsedCookies = parseCookies(serverSideCookie)\n//   const accessToken = parsedCookies.accessToken\n//   const isAuthenticated = accessToken !== undefined\n//   // const redirectUrlWhenUnauthenticated = '/member/login'\n//   const redirectUrlWhenUnauthenticated = '/'\n//   const redirectUrlWhenAuthenticated = '/'\n//   if (!isAuthenticated && !isWhiteListUrl(pathname)) {\n//     if (pathname !== redirectUrlWhenUnauthenticated)\n//       if (isSsr) {\n//         if (pathname === '/card') {\n//           res.writeHead(302, { Location: '/member/login' })\n//         } else {\n//           res.writeHead(302, { Location: redirectUrlWhenUnauthenticated })\n//         }\n//         res.end()\n//       } else {\n//         if (pathname === '/card') {\n//           Router.push('/member/login')\n//         } else {\n//           Router.push(redirectUrlWhenUnauthenticated)\n//         }\n//       }\n//   }\n//   return {\n//     serverSideCookie,\n//   }\n// }\n// const parseCookies = (serverSideCookie, options = {}) => {\n//   const isSsr = typeof window === 'undefined'\n//   const cookie = isSsr ? serverSideCookie : window.document.cookie\n//   return Cookie.parse(cookie || '', options)\n// }\n// export default withApollo(({ initialState, ctx }) => {\n//   const httpLink = new HttpLink({\n//     uri: `${process.env.NEXT_PUBLIC_API_HOST}/graphql`,\n//   })\n//   const authLink = new ApolloLink((operation, forward) => {\n//     const serverSideCookie = ctx && ctx.req && ctx.req.headers.cookie\n//     const parsedCookies = parseCookies(serverSideCookie)\n//     const { accessToken } = parsedCookies\n//     operation.setContext({\n//       headers: {\n//         // authorization: accessToken ? `Bearer ${accessToken}` : '',\n//         authorization:\n//           'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJqZWh5ZW9rQGNvZGVyZWQuY29vbCIsInNjb3BlIjpbImRlZmF1bHQiXSwidXNlclV1aWQiOiJrcWlkb3JsZGJmIiwidXNlcklkIjo2NywiYXV0aG9yaXRpZXMiOlsiQVBQX1VTRVIiXSwianRpIjoiYTgxMDRhNzYtNzAyOC00ZmIwLWEwZjctNTY4MzBhODRlZDJhIiwiZW1haWwiOiJqZWh5ZW9rQGNvZGVyZWQuY29vbCIsImNsaWVudF9pZCI6ImZhY3RvcnkiLCJ1c2VybmFtZSI6IuygnO2YgeyKpCJ9.9wn30jW2jFWY-AQlFo2d19C8P39z1ne3BxgmJW9U6P0',\n//       },\n//     })\n//     if (operation.variables) {\n//       const omitTypename = (key, value) => {\n//         return key === '__typename' ? undefined : value\n//       }\n//       operation.variables = JSON.parse(\n//         JSON.stringify(operation.variables),\n//         omitTypename,\n//       )\n//     }\n//     return forward(operation)\n//   })\n//   const defaultOptions = {\n//     watchQuery: {\n//       fetchPolicy: 'cache-and-network',\n//       errorPolicy: 'all',\n//     },\n//     query: {\n//       fetchPolicy: 'network-only',\n//       errorPolicy: 'all',\n//     },\n//     mutate: {\n//       errorPolicy: 'all',\n//     },\n//   }\n//   return new ApolloClient({\n//     cache: new InMemoryCache().restore(initialState || {}),\n//     link: authLink.concat(httpLink),\n//     defaultOptions,\n//   })\n// })(MyApp)\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/Bae Kyungmo/OneDrive/Desktop/FrontEndStudy/React/react-hosun/pages/_app.js"],"names":["StylesProvider","ThemeProvider","StyledThemeProvider","Head","CookiesProvider","Cookie","transitions","positions","Provider","AlertProvider","AlertTemplate","theme","noop","MyApp","Component","pageProps","router","pathname","apollo","process","env","NEXT_PUBLIC_ENV","console","log","warn","Header","App","options","position","BOTTOM_CENTER","timeout","transition","SCALE"],"mappings":";;;;;;;;AAAA,OAAO,YAAP;AAEA,SAASA,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASA,aAAa,IAAIC,mBAA1B,QAAqD,mBAArD;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAQ,IAAIC,aAA7C,QAAkE,aAAlE;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF,GAAhC;AAA8CC,EAAAA;AAA9C,CAAD,KAA4D;AACxE,MAAIC,OAAO,CAACC,GAAR,CAAYC,eAAZ,KAAgC,KAApC,EAA2C;AACzCC,IAAAA,OAAO,CAACC,GAAR,GAAcX,IAAd;AACAU,IAAAA,OAAO,CAACE,IAAR,GAAeZ,IAAf;AACD;;AAED,QAAMa,MAAM,gBACV,QAAC,IAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,MAAIC,GAAG,GAAG,mBACR;AAAA,eACGD,MADH,eAEE,QAAC,SAAD,oBAAeV,SAAf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,QAAMY,OAAO,GAAG;AACd;AACAC,IAAAA,QAAQ,EAAErB,SAAS,CAACsB,aAFN;AAGdC,IAAAA,OAAO,EAAE,IAHK;AAId;AACA;AACAC,IAAAA,UAAU,EAAEzB,WAAW,CAAC0B;AANV,GAAhB;AASA,sBACE,QAAC,aAAD,kCAAmBL,OAAnB;AAA4B,IAAA,QAAQ,EAAEjB,aAAtC;AAAA,2BACE,QAAC,eAAD;AAAA,6BAEE,QAAC,cAAD;AAAgB,QAAA,WAAW,MAA3B;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEC,KAAtB;AAAA,iCACE,QAAC,mBAAD;AAAqB,YAAA,KAAK,EAAEA,KAA5B;AAAA,mCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/CD;;KAAME,K;AAiDN,eAAeA,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './_app.css'\r\n\r\nimport { StylesProvider } from '@material-ui/styles'\r\nimport { ThemeProvider } from '@material-ui/core'\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components'\r\nimport Head from 'next/head'\r\n// import withApollo from 'next-with-apollo'\r\n// import AdminLayout from '~/src/components/layouts/AdminLayout'\r\n// import Router from 'next/router'\r\n// import { ApolloLink, HttpLink, ApolloProvider } from '@apollo/client'\r\n// import { ApolloClient } from '@apollo/client/core'\r\n// import { InMemoryCache } from '@apollo/client/cache'\r\nimport { CookiesProvider } from 'react-cookie'\r\nimport Cookie from 'cookie'\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\nimport theme from '../src/theme'\r\n\r\nconst noop = () => {}\r\n\r\nconst MyApp = ({ Component, pageProps, router: { pathname }, apollo }) => {\r\n  if (process.env.NEXT_PUBLIC_ENV !== 'dev') {\r\n    console.log = noop\r\n    console.warn = noop\r\n  }\r\n\r\n  const Header = (\r\n    <Head>\r\n      <title>Codered</title>\r\n      <meta\r\n        name=\"viewport\"\r\n        content=\"width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=0\"\r\n      />\r\n    </Head>\r\n  )\r\n\r\n  let App = () => (\r\n    <div>\r\n      {Header}\r\n      <Component {...pageProps} />\r\n    </div>\r\n  )\r\n\r\n  const options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.BOTTOM_CENTER,\r\n    timeout: 5000,\r\n    // offset: '30px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.SCALE,\r\n  }\r\n\r\n  return (\r\n    <AlertProvider {...options} template={AlertTemplate}>\r\n      <CookiesProvider>\r\n        {/* <ApolloProvider client={apollo}> */}\r\n        <StylesProvider injectFirst>\r\n          <ThemeProvider theme={theme}>\r\n            <StyledThemeProvider theme={theme}>\r\n              <App />\r\n            </StyledThemeProvider>\r\n          </ThemeProvider>\r\n        </StylesProvider>\r\n        {/* </ApolloProvider> */}\r\n      </CookiesProvider>\r\n    </AlertProvider>\r\n  )\r\n}\r\n\r\nexport default MyApp\r\n\r\n// const isWhiteListUrl = (url) => {\r\n//   return true\r\n//   // return (\r\n//   //   url === '/' ||\r\n//   //   // url === '/card' ||\r\n//   //   url.startsWith('/_error') ||\r\n//   //   url.startsWith('/member/login') ||\r\n//   //   url.startsWith('/member/join') ||\r\n//   //   url.startsWith('/member/join-result') ||\r\n//   //   url.startsWith('/member/not-verified') ||\r\n//   //   url.startsWith('/member/verify') ||\r\n//   //   url.startsWith('/member/reset-password')\r\n//   // )\r\n// }\r\n\r\n// MyApp.getInitialProps = async ({ ctx }) => {\r\n//   let serverSideCookie\r\n\r\n//   const { req, res, pathname } = ctx\r\n\r\n//   if (req) {\r\n//     serverSideCookie = req.headers.cookie\r\n//   }\r\n\r\n//   const isSsr = typeof window === 'undefined'\r\n\r\n//   const parsedCookies = parseCookies(serverSideCookie)\r\n\r\n//   const accessToken = parsedCookies.accessToken\r\n//   const isAuthenticated = accessToken !== undefined\r\n//   // const redirectUrlWhenUnauthenticated = '/member/login'\r\n//   const redirectUrlWhenUnauthenticated = '/'\r\n//   const redirectUrlWhenAuthenticated = '/'\r\n\r\n//   if (!isAuthenticated && !isWhiteListUrl(pathname)) {\r\n//     if (pathname !== redirectUrlWhenUnauthenticated)\r\n//       if (isSsr) {\r\n//         if (pathname === '/card') {\r\n//           res.writeHead(302, { Location: '/member/login' })\r\n//         } else {\r\n//           res.writeHead(302, { Location: redirectUrlWhenUnauthenticated })\r\n//         }\r\n//         res.end()\r\n//       } else {\r\n//         if (pathname === '/card') {\r\n//           Router.push('/member/login')\r\n//         } else {\r\n//           Router.push(redirectUrlWhenUnauthenticated)\r\n//         }\r\n//       }\r\n//   }\r\n\r\n//   return {\r\n//     serverSideCookie,\r\n//   }\r\n// }\r\n\r\n// const parseCookies = (serverSideCookie, options = {}) => {\r\n//   const isSsr = typeof window === 'undefined'\r\n//   const cookie = isSsr ? serverSideCookie : window.document.cookie\r\n//   return Cookie.parse(cookie || '', options)\r\n// }\r\n\r\n// export default withApollo(({ initialState, ctx }) => {\r\n//   const httpLink = new HttpLink({\r\n//     uri: `${process.env.NEXT_PUBLIC_API_HOST}/graphql`,\r\n//   })\r\n\r\n//   const authLink = new ApolloLink((operation, forward) => {\r\n//     const serverSideCookie = ctx && ctx.req && ctx.req.headers.cookie\r\n//     const parsedCookies = parseCookies(serverSideCookie)\r\n//     const { accessToken } = parsedCookies\r\n\r\n//     operation.setContext({\r\n//       headers: {\r\n//         // authorization: accessToken ? `Bearer ${accessToken}` : '',\r\n//         authorization:\r\n//           'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJqZWh5ZW9rQGNvZGVyZWQuY29vbCIsInNjb3BlIjpbImRlZmF1bHQiXSwidXNlclV1aWQiOiJrcWlkb3JsZGJmIiwidXNlcklkIjo2NywiYXV0aG9yaXRpZXMiOlsiQVBQX1VTRVIiXSwianRpIjoiYTgxMDRhNzYtNzAyOC00ZmIwLWEwZjctNTY4MzBhODRlZDJhIiwiZW1haWwiOiJqZWh5ZW9rQGNvZGVyZWQuY29vbCIsImNsaWVudF9pZCI6ImZhY3RvcnkiLCJ1c2VybmFtZSI6IuygnO2YgeyKpCJ9.9wn30jW2jFWY-AQlFo2d19C8P39z1ne3BxgmJW9U6P0',\r\n//       },\r\n//     })\r\n//     if (operation.variables) {\r\n//       const omitTypename = (key, value) => {\r\n//         return key === '__typename' ? undefined : value\r\n//       }\r\n//       operation.variables = JSON.parse(\r\n//         JSON.stringify(operation.variables),\r\n//         omitTypename,\r\n//       )\r\n//     }\r\n\r\n//     return forward(operation)\r\n//   })\r\n\r\n//   const defaultOptions = {\r\n//     watchQuery: {\r\n//       fetchPolicy: 'cache-and-network',\r\n//       errorPolicy: 'all',\r\n//     },\r\n//     query: {\r\n//       fetchPolicy: 'network-only',\r\n//       errorPolicy: 'all',\r\n//     },\r\n//     mutate: {\r\n//       errorPolicy: 'all',\r\n//     },\r\n//   }\r\n\r\n//   return new ApolloClient({\r\n//     cache: new InMemoryCache().restore(initialState || {}),\r\n//     link: authLink.concat(httpLink),\r\n//     defaultOptions,\r\n//   })\r\n// })(MyApp)"]},"metadata":{},"sourceType":"module"}